#!/bin/bash

PROBE_FILE="/fb_host_probe.txt"
VARNISHADM="varnishadm -T varnish:6082 -S /varnish.secret"
REDIS_CLI="redis-cli -h clusterdata"


VARNISH_STATUS=$($VARNISHADM ping | awk '{print $1}')
if [[ ! $VARNISH_STATUS == "PONG" ]]; then
  echo "Unable to read VCLs from Varnish"
  exit 1
fi

VCL_NAME=$($VARNISHADM vcl.list | awk '{print $4}')
#$VARNISHADM vcl.show $VCL_NAME > /root/vcl.vcl
VCL=`$VARNISHADM vcl.show $VCL_NAME`
VCL=$(echo "$VCL" | sed '/#AUTOGENERATED_START/,/#AUTOGENERATED_END/c#AUTOGENERATED_START\n#AUTOGENERATED_END')

unset HOSTS_ARRAY
HOSTS_ARRAY=(`redis-cli -h clusterdata --csv HGETALL fb_apache_containers | tr -d '"' | sed 's/,/\ /g'`)

unset HOSTS_NAMES_ARRAY
for (( index=1; index<${#HOSTS_ARRAY[@]}; index+=2 )); do
  HOSTS_NAMES_ARRAY+=(${HOSTS_ARRAY[index]})
done
#echo "${HOSTS_NAMES_ARRAY[@]}"

# Function for configure varnish load balancer
function LBConfigMaker() {
for (( count=1; count<=${#HOSTS_NAMES_ARRAY[@]}; count++ ))
do  
    echo "backend apache_$count {
    .host = \"${HOSTS_NAMES_ARRAY[count-1]}\";
    .port = \"80\";
    .probe = {.url = \"$PROBE_FILE\";.timeout = 1s;.interval = 5s;.window = 1;.threshold = 1;}
}"
    echo ''
done
echo "sub vcl_init {
    new cluster1 = directors.round_robin();"

for (( count=1; count<=${#HOSTS_NAMES_ARRAY[@]}; count++ ))
do  
   echo "    cluster1.add_backend(apache_$count);"
done
echo '}'
echo ''
echo 'sub vcl_recv {'
echo     'set req.backend_hint = cluster1.backend();'
echo '}'
}

CONFIG_FOR_INSERT=$(LBConfigMaker)

function NewVclConfig () {
echo "$VCL" | \
while IFS= read -r LINE
   do echo "$LINE"
   if [[ $LINE == "#AUTOGENERATED_START" ]]; then
       echo "$CONFIG_FOR_INSERT"
   fi
done
}

echo "$(NewVclConfig)"> newvcl.vcl

#sed 's?\\?\\\\\\?g' | sed ':a;{N;s/\n/\\\\n/};ba' | sed 's/"/\\\\\\"/g' 

#sed '/#AUTOGENERATED_START/ r insert.txt' varnish.vcl


varnishadm -T varnish:6082 -S /varnish.secret vcl.inline test2 `echo "\" $VCCCL \""`

